# HTTPS server block
server {
    listen 443 ssl http2;
    server_name chat.alenushka-pediatr.ru;
    root /var/www/alenushka-chat/apps/frontend/dist;
    index index.html;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/chat.alenushka-pediatr.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/chat.alenushka-pediatr.ru/privkey.pem;

    # Performance optimizations
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        application/javascript
        application/json
        text/css
        text/javascript
        text/plain
        text/xml
        image/svg+xml;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com https://unpkg.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://use.fontawesome.com https://cdnjs.cloudflare.com https://unpkg.com https://cdn.jsdelivr.net; font-src 'self' data: https://fonts.gstatic.com https://use.fontawesome.com https://cdnjs.cloudflare.com https://unpkg.com https://cdn.jsdelivr.net; img-src 'self' data: https: blob:; media-src 'self' https://firebasestorage.googleapis.com https://storage.googleapis.com https://*.firebasestorage.app; connect-src 'self' wss: https: https://firebasestorage.googleapis.com https://storage.googleapis.com https://*.firebasestorage.app; frame-ancestors 'self'; object-src 'none'; base-uri 'self'" always;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Static assets with caching
    location ~* \.(?:js|css|eot|gif|ico|jpe?g|otf|png|ttf|woff2?|svg|json|mov|webp)$ {
        expires 1M;
        add_header Cache-Control "public" always;
        add_header Vary "Accept-Encoding" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        try_files $uri =404;
    }

    # SPA routing - fallback to index.html (MUST be last)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # WebSocket support for Socket.IO
    location /api/socket.io/ {
        proxy_pass http://127.0.0.1:3014/api/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket timeouts
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    # API proxy for chat backend
    location /api/ {
        proxy_pass http://127.0.0.1:3014/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;

    # Logging
    access_log /var/log/nginx/chat.alenushka-pediatr.ru.access.log;
    error_log /var/log/nginx/chat.alenushka-pediatr.ru.error.log;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name chat.alenushka-pediatr.ru;

    # ACME challenge for Let's Encrypt certificate renewals
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        default_type text/plain;
        try_files $uri =404;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}
